Перем Имя;

Перем ИмяТипаАннотации;

Перем Параметры;

Перем Аннотации;

Функция ИмяТипаАннотации() Экспорт
	Возврат ИмяТипаАннотации;
КонецФункции

Функция Параметры() Экспорт
	Возврат Параметры.Скопировать();
КонецФункции

Функция Аннотации() Экспорт
	Возврат Аннотации.Скопировать();
КонецФункции

Процедура Проверить(Аннотация, ИмяТипаСАннотацией) Экспорт

	Для Каждого Параметр Из Параметры Цикл
		ПараметрАннотации = РаботаСАннотациями.ПолучитьПараметрАннотации(Аннотация, Параметр.Имя);
		Если ПараметрАннотации = Неопределено И НЕ Параметр.ЕстьЗначениеПоУмолчанию Тогда
			ВызватьИсключение СтрШаблон(
				"Аннотация ""%1"" в классе ""%2"" должна содержать параметр ""%3""",
				Аннотация.Имя,
				ИмяТипаСАннотацией,
				Параметр.Имя
			);
		КонецЕсли;
	КонецЦикла;

	// Приведение имен параметров к значениям по умолчанию
	Для Каждого ПараметрАннотации Из Аннотация.Параметры Цикл
		Если ПараметрАннотации.Имя = Неопределено Тогда
			ПараметрАннотации.Имя = "Значение";
		КонецЕсли;
	КонецЦикла;

	// Проверка параметров аннотации на корректность
	КоличествоПараметровСИменемПоУмолчанию = 0;
	Для Каждого ПараметрАннотации Из Аннотация.Параметры Цикл

		ИмяПараметраВложеннойАннотации = ПараметрАннотации.Имя;
		Если ВРег(ИмяПараметраВложеннойАннотации) = ВРег("Значение") Тогда
			КоличествоПараметровСИменемПоУмолчанию = КоличествоПараметровСИменемПоУмолчанию + 1;
		КонецЕсли;

		// Аннотация содержит только один параметр с именем по умолчанию
		Если КоличествоПараметровСИменемПоУмолчанию > 1 Тогда
			ВызватьИсключение СтрШаблон(
				"Аннотация %1 в классе %2 имеет более одного параметра без имени или с именем ""Значение""",
				Аннотация.Имя,
				ИмяТипаСАннотацией
			);
		КонецЕсли;
		
		ОпределениеПараметраАннотации = Параметры.Найти(ИмяПараметраВложеннойАннотации, "Имя");

		// Аннотация не содержит неизвестных параметров
		Если ОпределениеПараметраАннотации = Неопределено Тогда
			ВызватьИсключение СтрШаблон(
				"Аннотация %1 в классе %2 содержит неизвестный параметр %3", 
				Аннотация.Имя,
				ИмяТипаСАннотацией,
				ИмяПараметраВложеннойАннотации
			);
		КонецЕсли;

	КонецЦикла;

	// Аннотация содержит только известные параметры
	Для Каждого ОпределениеПараметраАннотации Из Параметры Цикл

		ПараметрВложеннойАннотации = Аннотация.Параметры.Найти(ОпределениеПараметраАннотации.Имя, "Имя");
		Если НЕ ОпределениеПараметраАннотации.ЕстьЗначениеПоУмолчанию
			И ПараметрВложеннойАннотации = Неопределено Тогда
			
			ВызватьИсключение СтрШаблон(
				"Аннотация %1 в классе %2 не содержит параметр %3",
				Аннотация.Имя,
				ИмяТипаСАннотацией,
				ОпределениеПараметраАннотации.Имя
			);
		КонецЕсли;

		// Параметры заполнены правильными типами
		// todo: проверка типов

	КонецЦикла;
	
КонецПроцедуры

Процедура ПриСозданииОбъекта(Знач _Имя, Знач _ИмяТипаАннотации, Знач _Параметры, Знач _Аннотации)

	Имя = _Имя;
	ИмяТипаАннотации = _ИмяТипаАннотации;
	Аннотации = _Аннотации;

	Параметры = Новый ТаблицаЗначений();
	Параметры.Колонки.Добавить("Имя", Новый ОписаниеТипов("Строка"));
	Параметры.Колонки.Добавить("ЕстьЗначениеПоУмолчанию", Новый ОписаниеТипов("Булево"));
	Параметры.Колонки.Добавить("ЗначениеПоУмолчанию");

	Для Каждого Параметр Из _Параметры Цикл
		АннотацияПараметр = РаботаСАннотациями.НайтиАннотацию(Параметр.Аннотации, "Параметр");
		Если АннотацияПараметр = Неопределено Тогда
			ВызватьИсключение СтрШаблон(
				"Параметр ""%1"" в конструкторе классе ""%2"" не содержит аннотацию ""Параметр""",
				Параметр.Имя,
				Имя	
			);
		КонецЕсли;

		СтрокаПараметр = Параметры.Добавить();
		СтрокаПараметр.Имя = Параметр.Имя;
		ЗначениеПоУмолчанию = АннотацияПараметр.Параметры.Найти("ЗначениеПоУмолчанию", "Имя");
		СтрокаПараметр.ЕстьЗначениеПоУмолчанию = ЗначениеПоУмолчанию <> Неопределено;
		Если СтрокаПараметр.ЕстьЗначениеПоУмолчанию Тогда
			СтрокаПараметр.ЗначениеПоУмолчанию = ЗначениеПоУмолчанию.Значение;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры